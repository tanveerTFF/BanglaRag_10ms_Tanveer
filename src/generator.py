# src/generator.py

print("üëã generator.py has started")


import requests
from src.retriever import retrieve_similar_chunks

OLLAMA_URL = "http://localhost:11434/api/chat"
OLLAMA_MODEL = "llama3"  # Change to your preferred local model

def call_ollama(prompt: str) -> str:
    response = requests.post(
        OLLAMA_URL,
        json={
            "model": OLLAMA_MODEL,
            "stream": False,  # üõ†Ô∏è This is the fix
            "messages": [
                {"role": "system", "content": "You are a helpful assistant for Bangla literature questions."},
                {"role": "user", "content": prompt}
            ]
        }
    )
    response.raise_for_status()
    output = response.json()
    return output["message"]["content"]


def generate_answer(question: str, top_k: int = 3) -> str:
    # 1. Retrieve top matching chunks
    chunks = retrieve_similar_chunks(question, top_k=top_k)

    # 2. Create a prompt combining chunks + question
    context = "\n\n".join(chunks)
    prompt = f"""
    ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ï‡¶ú‡¶® ‡¶ú‡ßç‡¶û‡¶æ‡¶®‡ßá‡¶∞ ‡¶≠‡¶æ‡¶£‡ßç‡¶°‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶π‡¶ï‡¶æ‡¶∞‡ßÄ‡•§ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶π‡¶≤‡ßã ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá‡¶∞ ‡¶Ø‡¶•‡¶æ‡¶Ø‡¶• ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶∏‡¶ô‡ßç‡¶ó‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‡•§ 

    ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®: {question}

    ‡¶®‡¶ø‡¶ö‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶™‡ßç‡¶∞‡¶æ‡¶∏‡¶ô‡ßç‡¶ó‡¶ø‡¶ï ‡¶§‡¶•‡ßç‡¶Ø OCR ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ó‡ßá‡¶õ‡ßá:

    {context}

    üëâ ‡¶â‡¶™‡¶∞‡ßã‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶§‡ßá ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶æ‡¶ì‡•§ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶Ø‡¶º ‡¶≤‡ßá‡¶ñ‡ßã:
    """



    # 3. Call Ollama model
    answer = call_ollama(prompt)
    return answer.strip()

if __name__ == "__main__":
    while True:
        user_input = input("\n‚ùì ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶≤‡ßá‡¶ñ‡ßã (‡¶¨‡¶æ 'exit' ‡¶ü‡¶æ‡¶á‡¶™ ‡¶ï‡¶∞‡ßã ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶§‡ßá):\n> ")
        if user_input.strip().lower() == "exit":
            break

        try:
            answer = generate_answer(user_input)
            print(f"\nüß† ‡¶â‡¶§‡ßç‡¶§‡¶∞:\n{answer}")
        except Exception as e:
            print(f"‚ö†Ô∏è Error: {e}")
